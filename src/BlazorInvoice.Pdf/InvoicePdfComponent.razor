@using BlazorInvoice.Shared
@using System.Globalization
@inject PdfJsInterop pdfJsInterop

<div>
    @if (!string.IsNullOrEmpty(ObjectUrl))
    {
        <iframe src="@ObjectUrl" width="100%" height="600px" style="border: none;"></iframe>
    }
    @if (!string.IsNullOrEmpty(error))
    {
        <p class="text-danger">@error</p>
    }
</div>

@code {
    [Parameter]
    public BlazorInvoiceDto? Invoice { get; set; }

    public string ObjectUrl { get; set; } = string.Empty;
    string error = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CreatePdf();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    public void Update(BlazorInvoiceDto? invoice)
    {
        this.Invoice = invoice;
        _ = CreatePdf();
    }

    private async Task CreatePdf()
    {
        try
        {
            if (Invoice is null)
            {
                return;
            }
            else
            {
                ObjectUrl = await pdfJsInterop
                    .CreateInvoicePdf(Invoice, CultureInfo.CurrentCulture.TwoLetterISOLanguageName);
            }
            error = string.Empty;
        }
        catch (Exception ex)
        {
            error = ex.Message;
            ObjectUrl = string.Empty;
        }
        await InvokeAsync(StateHasChanged);
    }
}