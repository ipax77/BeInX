@using BlazorInvoice.Localization
@using BlazorInvoice.Shared
@using BlazorInvoice.Shared.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using pax.XRechnung.NET.BaseDtos
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<InvoiceLoc> Loc

<div>
    <EditForm EditContext="invoiceEditContext" FormName="InvoiceForm">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="gtax" class="form-label">Tax Category</label>
            <div class="input-group">
                <InputText class="form-control" id="gtax" aria-describedby="gtaxdesc" @bind-Value="Invoice.GlobalTaxCategory" />
                <button type="button" class="btn btn-sm btn-outline-light ms-1" @onclick="@(() => OnCodeListRequested.InvokeAsync("UNTDID_5305"))">Pick</button>
            </div>
            <small id="gtaxdesc" class="@descClass">
                @Loc["BT-118-global"] - UNTDID 5305
            </small>
            <div>
                <ValidationMessage For="@(() => Invoice.GlobalTaxCategory)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="taxscheme" class="form-label">Tax Scheme</label>
            <InputText class="form-control" id="taxscheme" aria-describedby="taxschemedesc" @bind-Value="Invoice.GlobalTaxScheme" />
            <small id="taxschemedesc" class="@descClass">@Loc["GlobalTaxScheme"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.GlobalTaxScheme)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="tax" class="form-label">Tax</label>
            <InputNumber min="1" max="100" class="form-control" id="tax" aria-describedby="taxdesc" @bind-Value="Invoice.GlobalTax" />
            <small id="taxdesc" class="@descClass">@Loc["GlobalTax"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.GlobalTax)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bt1" class="form-label">Id</label>
            <InputText class="form-control" id="bt1" aria-describedby="bt1desc" @bind-Value="Invoice.Id" />
            <small id="bt1desc" class="@descClass">@Loc["BT-1"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.Id)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bt2" class="form-label">Issue Date</label>
            <InputDate class="form-control" id="bt2" aria-describedby="bt2desc" @bind-Value="Invoice.IssueDate" />
            <small id="bt2desc" class="@descClass">@Loc["BT-2"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.IssueDate)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bt9" class="form-label">Due Date</label>
            <InputDate class="form-control" id="bt9" aria-describedby="bt9desc" @bind-Value="Invoice.DueDate" />
            <small id="bt9desc" class="@descClass">@Loc["BT-9"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.DueDate)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bt3" class="form-label">Typ</label>
            <div class="input-group">
                <InputText class="form-control" id="bt3" aria-describedby="bt3desc" @bind-Value="Invoice.InvoiceTypeCode" />
                <button type="button" class="btn btn-sm btn-outline-light ms-1" @onclick="@(() => OnCodeListRequested.InvokeAsync("UNTDID_1001"))">Pick</button>
            </div>
            <small id="bt3desc" class="@descClass">
                @Loc["BT-3"] - UNTDID 1001
            </small>
            <div>
                <ValidationMessage For="@(() => Invoice.InvoiceTypeCode)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bg1" class="form-label">Note</label>
            <InputTextArea class="form-control" id="bg1" aria-describedby="bg1desc" @bind-Value="Invoice.Note" />
            <small id="bg1desc" class="@descClass">@Loc["BG-1"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.Note)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bt5" class="form-label">Currency</label>
            <div class="input-group">
                <InputText class="form-control" id="bt5" aria-describedby="bt5desc" @bind-Value="Invoice.DocumentCurrencyCode" />
                <button type="button" class="btn btn-sm btn-outline-light ms-1" @onclick="@(() => OnCodeListRequested.InvokeAsync("Currency_Codes"))">Pick</button>
            </div>
            <small id="bt5desc" class="@descClass">
                @Loc["BT-5"]
            </small>
            <div>
                <ValidationMessage For="@(() => Invoice.DocumentCurrencyCode)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="bt20" class="form-label">Payment Terms Note</label>
            <InputTextArea class="form-control" id="bt20" aria-describedby="bt20desc" placeholder="Zahlbar innerhalb von 14 Tagen." @bind-Value="Invoice.PaymentTermsNote" />
            <small id="bt20desc" class="@descClass">@Loc["BT-20"]</small>
            <div>
                <ValidationMessage For="@(() => Invoice.PaymentTermsNote)" />
            </div>
        </div>
    </EditForm>
</div>

@code {
    [Parameter, EditorRequired]
    public BlazorInvoiceDto Invoice { get; set; } = new();

    [Parameter]
    public EventCallback<string> OnCodeListRequested { get; set; }

    [Parameter]
    public bool ShowDesc { get; set; } = true;

    [CascadingParameter(Name = "invoiceEditContext")]
    public EditContext invoiceEditContext { get; set; } = null!;
    
    string descClass => ShowDesc ? "form-text text-muted" : "d-none";
}


