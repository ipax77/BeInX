@using System.Globalization
@using BlazorInvoice.Shared
@using BlazorInvoice.Shared.Interfaces
@inherits InvoiceBaseComponent

<nav class="navbar navbar-expand-lg bg-dark-subtle">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggler01"
                aria-controls="navbarToggler01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarToggler01">
            <a class="navbar-brand" href="#">
                <div class="p-1 bg-light rounded rounded-2">
                    <img src="./_content/BlazorInvoice.Weblib/images/beinx.svg" alt="beinx"
                         style="height: 25px;" />
                </div>
            </a>
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link" href="/">
                        <i class="bi bi-house-door"></i> @Loc["Dashboard"]
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/invoices">
                        <i class="bi bi-file-earmark-text"></i> @Loc["Invoices"]
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/create">
                        <i class="bi bi-pencil-square"></i> @Loc["New Invoice"]
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                        <i class="bi bi-people"></i> @Loc["Parties"]
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/parties/true">@Loc["Sellers"]</a></li>
                        <li><a class="dropdown-item" href="/parties/false">@Loc["Buyers"]</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/payments">
                        <i class="bi bi-credit-card"></i> @Loc["Means of Payments"]
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/import">
                        <i class="bi bi-upload"></i> @Loc["Import"]
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/settings">
                        <i class="bi bi-gear"></i> @Loc["Settings"]
                    </a>
                </li>
                <li class="ms-auto nav-item">
                    <form name="cultureselect">
                        <fieldset>
                            <label class="form-label">
                                <select class="form-select" required @bind="cultureName" @bind:after="@(() => SetCulture(cultureName))">
                                    <option value="iv">@Loc["Language"] ..</option>
                                    @foreach (var culture in ConfigService.GetSupportedCultures())
                                    {
                                        <option value="@culture.TwoLetterISOLanguageName">@culture.NativeName</option>
                                    }
                                </select>
                            </label>
                        </fieldset>
                    </form>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    AppConfigDto appConfig = new();
    string cultureName = "iv";

    protected override async Task OnInitializedAsync()
    {
        appConfig = await ConfigService.GetConfig();
        if (!string.IsNullOrEmpty(appConfig.CultureName))
        {
            cultureName = appConfig.CultureName;
        }
    }

    private async Task SetCulture(string name)
    {
        var cultureInfo = new CultureInfo(name);
        CultureInfo.CurrentCulture = cultureInfo;
        CultureInfo.DefaultThreadCurrentCulture = cultureInfo;
        CultureInfo.DefaultThreadCurrentUICulture = cultureInfo;

        appConfig.CultureName = cultureInfo.TwoLetterISOLanguageName;
        await ConfigService.UpdateConfig(appConfig);
    }
}