@using Microsoft.JSInterop
@inherits InvoiceBaseComponent
@inject IJSRuntime JSRuntime

<div class="modal fade" id="@_modalId" tabindex="-1" aria-labelledby="tempInvoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="tempInvoiceModalLabel">@Loc["Unfinished Invoice"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>@Loc["InvContinue"]</p>
                <p>@Loc["DiscardDesc", $"\"{Loc["Continue"]}\"", $"\"{Loc["Discard"]}\""]</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Loc["Close"]</button>
                <button type="button" class="btn btn-primary" @onclick="e => Notify(true)">@Loc["Continue"]</button>
                <button type="button" class="btn btn-danger" @onclick="e => Notify(false)">@Loc["Discard"]</button>
            </div>
        </div>
    </div>
</div>

@code {
    private readonly string _modalId = "tempInvoiceModal";

    [Parameter]
    public EventCallback<bool> OnContinue { get; set; }

    public void Show()
    {
        JSRuntime.InvokeVoidAsync("openModalById", _modalId);
    }

    public void Close()
    {
        JSRuntime.InvokeVoidAsync("closeModalById", _modalId);
    }

    public void Notify(bool continueInvoice)
    {
        OnContinue.InvokeAsync(continueInvoice);
        Close();
    }
}
