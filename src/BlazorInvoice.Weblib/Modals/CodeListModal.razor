@using Microsoft.JSInterop
@using pax.XRechnung.NET
@using pax.XRechnung.NET.CodeListModel
@inherits InvoiceBaseComponent
@inject IJSRuntime JSRuntime

<div class="modal fade" id="@_modalId" tabindex="-1" aria-labelledby="codeListModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="codeListModalLabel">Code List @_codeListName</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>@_codeList?.Metadaten.Beschreibung.FirstOrDefault()?.Value</p>
                <input type="text" class="form-control mb-2" placeholder="@Loc["Search"]" @bind="_searchTerm" />
                <div class="table-responsive">
                    <table class="table table-sm table-striped table-hover">
                        <thead>
                            <tr>
                                <th scope="col">Code</th>
                                <th scope="col">Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (_codeList != null)
                            {
                                foreach (var ent in _codeList.Data.Where(FilterEntry))
                                {
                                    var codeName = ent.ElementAtOrDefault(0);
                                    var desc = ent.ElementAtOrDefault(1) ?? "";

                                    if (!string.IsNullOrWhiteSpace(codeName))
                                    {
                                        <tr class="pointer" @onclick="() => Select(codeName)">
                                            <td>@codeName</td>
                                            <td>@desc</td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Loc["Close"]</button>
            </div>
        </div>
    </div>
</div>

@code {
    private readonly string _modalId = "codeListModal";

    [Parameter]
    public EventCallback<KeyValuePair<string, string>> OnSelected { get; set; }

    private CodeList? _codeList;
    private string _codeListName = string.Empty;
    private string _searchTerm = string.Empty;

    public void Show(string codeListName)
    {
        _searchTerm = string.Empty;
        _codeListName = codeListName;
        _codeList = CodeListRepository.GetCodeList(codeListName);
        JSRuntime.InvokeVoidAsync("openModalById", _modalId);
    }

    private bool FilterEntry(List<string?> row)
    {
        if (row.Count == 0 || string.IsNullOrWhiteSpace(row[0])) return false;

        var code = row[0] ?? "";
        var desc = row.ElementAtOrDefault(1) ?? "";

        return string.IsNullOrWhiteSpace(_searchTerm)
            || code.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase)
            || desc.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase);
    }

    public void Close()
    {
        JSRuntime.InvokeVoidAsync("closeModalById", _modalId);
    }

    public void Select(string value)
    {
        OnSelected.InvokeAsync(new(_codeListName, value));
        Close();
    }
}
