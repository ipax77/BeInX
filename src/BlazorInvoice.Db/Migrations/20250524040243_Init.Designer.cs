// <auto-generated />
using System;
using BlazorInvoice.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorInvoice.Db.Migrations
{
    [DbContext(typeof(InvoiceContext))]
    [Migration("20250524040243_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("BlazorInvoice.Db.AdditionalDocumentReference", b =>
                {
                    b.Property<int>("AdditionalDocumentReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("DocumentDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AdditionalDocumentReferenceId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("AdditionalDocumentReferences");
                });

            modelBuilder.Entity("BlazorInvoice.Db.AppConfig", b =>
                {
                    b.Property<int>("AppConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackupFolder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BackupInterval")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExportEmbedPdf")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportFinalize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExportType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportValidate")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastBackup")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchematronValidationUri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShowFormDescriptions")
                        .HasPrecision(0)
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowValidationWarnings")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StatsIsMonthNotQuater")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatsMonthEndDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppConfigId");

                    b.ToTable("AppConfigs");
                });

            modelBuilder.Entity("BlazorInvoice.Db.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyerPartyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentCurrencyCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasPrecision(0)
                        .HasColumnType("TEXT");

                    b.Property<double>("GlobalTax")
                        .HasColumnType("REAL");

                    b.Property<string>("GlobalTaxCategory")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("GlobalTaxScheme")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceTypeCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsImported")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IssueDate")
                        .HasPrecision(0)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<double>("PayableAmount")
                        .HasColumnType("REAL");

                    b.Property<int>("PaymentMeansId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentTermsNote")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SellerPartyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmountWithoutVat")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("XmlInvoiceBlob")
                        .HasColumnType("BLOB");

                    b.Property<DateTime?>("XmlInvoiceCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("XmlInvoiceSha1Hash")
                        .HasColumnType("TEXT");

                    b.HasKey("InvoiceId");

                    b.HasIndex("BuyerPartyId");

                    b.HasIndex("Id");

                    b.HasIndex("IssueDate");

                    b.HasIndex("PaymentMeansId");

                    b.HasIndex("SellerPartyId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("BlazorInvoice.Db.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasPrecision(0)
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("QuantityCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasPrecision(0)
                        .HasColumnType("TEXT");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLines");
                });

            modelBuilder.Entity("BlazorInvoice.Db.InvoiceParty", b =>
                {
                    b.Property<int>("InvoicePartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerReference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("BLOB");

                    b.Property<string>("LogoReferenceId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("RegistrationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("InvoicePartyId");

                    b.HasIndex("Email");

                    b.HasIndex("IsSeller");

                    b.ToTable("InvoiceParties");
                });

            modelBuilder.Entity("BlazorInvoice.Db.PaymentMeans", b =>
                {
                    b.Property<int>("PaymentMeansId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bic")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMeansTypeCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.HasKey("PaymentMeansId");

                    b.ToTable("PaymentMeans");
                });

            modelBuilder.Entity("BlazorInvoice.Db.TempInvoice", b =>
                {
                    b.Property<int>("TempInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BuyerPartyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasPrecision(0)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("InvoiceBlob")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PaymentMeansId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SellerPartyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TempInvoiceId");

                    b.ToTable("TempInvoices");
                });

            modelBuilder.Entity("BlazorInvoice.Db.AdditionalDocumentReference", b =>
                {
                    b.HasOne("BlazorInvoice.Db.Invoice", "Invoice")
                        .WithMany("AdditionalDocumentReferences")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("BlazorInvoice.Db.Invoice", b =>
                {
                    b.HasOne("BlazorInvoice.Db.InvoiceParty", "BuyerParty")
                        .WithMany()
                        .HasForeignKey("BuyerPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorInvoice.Db.PaymentMeans", "PaymentMeans")
                        .WithMany("Invoices")
                        .HasForeignKey("PaymentMeansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorInvoice.Db.InvoiceParty", "SellerParty")
                        .WithMany()
                        .HasForeignKey("SellerPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerParty");

                    b.Navigation("PaymentMeans");

                    b.Navigation("SellerParty");
                });

            modelBuilder.Entity("BlazorInvoice.Db.InvoiceLine", b =>
                {
                    b.HasOne("BlazorInvoice.Db.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("BlazorInvoice.Db.Invoice", b =>
                {
                    b.Navigation("AdditionalDocumentReferences");

                    b.Navigation("InvoiceLines");
                });

            modelBuilder.Entity("BlazorInvoice.Db.PaymentMeans", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
